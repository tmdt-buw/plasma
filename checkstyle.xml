<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
		"-//Puppy Crawl//DTD Check Configuration 1.3//EN"
		"https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
	<property name="charset" value="UTF-8"/>

	<property name="fileExtensions" value="java, properties, xml"/>

	<module name="TreeWalker">
		<module name="OuterTypeFilename"/>
		<module name="IllegalTokenText">
			<property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
			<property name="format"
					  value="\\u00(08|09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
			<property name="message" value="Avoid using corresponding octal or Unicode escape."/>
		</module>
		<module name="AvoidEscapedUnicodeCharacters">
			<property name="allowEscapesForControlCharacters" value="true"/>
			<property name="allowByTailComment" value="true"/>
			<property name="allowNonPrintableEscapes" value="true"/>
		</module>
		<module name="IllegalImport">
			<!-- list by https://stackoverflow.com/questions/4963300/which-notnull-java-annotation-should-i-use -->
			<!-- SuppressFBWarnings should always be from depending package not by GrallVM -->
			<property name="illegalPkgs"
					  value="javax.validation.constraints.NotNull, lombok.NonNull, org.eclipse.jdt.annotation, org.checkerframework.checker.nullness.qual, org.graalvm.compiler.core.common.SuppressFBWarnings, sun, javax.transaction.Transactional"/>
		</module>
		<module name="RedundantImport"/>
		<module name="UnusedImports"/>
		<module name="OneTopLevelClass"/>
		<module name="NoLineWrap"/>
		<module name="EmptyBlock">
			<property name="option" value="TEXT"/>
			<property name="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
		</module>
		<module name="EmptyCatchBlock">
			<property name="exceptionVariableName" value="expected|ignore|ignored"/>
		</module>
		<module name="CovariantEquals">
			<property name="severity" value="error"/>
		</module>
		<module name="EqualsHashCode"/>
		<module name="NeedBraces"/>
		<module name="LeftCurly"/>
		<module name="RightCurly">
			<property name="option" value="alone"/>
			<property name="tokens"
					  value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT"/>
		</module>
		<module name="WhitespaceAround">
			<property name="allowEmptyConstructors" value="true"/>
			<property name="allowEmptyMethods" value="true"/>
			<property name="allowEmptyTypes" value="true"/>
			<property name="allowEmptyLoops" value="true"/>
			<message key="ws.notFollowed"
					 value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>
			<message key="ws.notPreceded"
					 value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
		</module>
		<module name="IllegalInstantiation"/>
		<module name="OneStatementPerLine"/>
		<module name="MultipleVariableDeclarations"/>
		<module name="ArrayTypeStyle"/>
		<module name="FallThrough"/>
		<module name="UpperEll"/>
		<module name="ModifierOrder"/>
		<module name="EmptyLineSeparator">
			<property name="allowNoEmptyLineBetweenFields" value="true"/>
		</module>
		<module name="SeparatorWrap">
			<property name="tokens" value="DOT"/>
			<property name="option" value="nl"/>
		</module>
		<module name="SeparatorWrap">
			<property name="tokens" value="COMMA"/>
			<property name="option" value="EOL"/>
		</module>
		<module name="PackageName">
			<property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
			<message key="name.invalidPattern"
					 value="Package name ''{0}'' must match pattern ''{1}''."/>
		</module>
		<module name="TypeName">
			<message key="name.invalidPattern"
					 value="Type name ''{0}'' must match pattern ''{1}''."/>
		</module>
		<module name="MemberName">
			<property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
			<message key="name.invalidPattern"
					 value="Member name ''{0}'' must match pattern ''{1}''."/>
		</module>
		<module name="ParameterName">
			<property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
			<message key="name.invalidPattern"
					 value="Parameter name ''{0}'' must match pattern ''{1}''."/>
		</module>
		<module name="LocalVariableName">
			<property name="tokens" value="VARIABLE_DEF"/>
			<property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
			<property name="allowOneCharVarInForLoop" value="true"/>
			<message key="name.invalidPattern"
					 value="Local variable name ''{0}'' must match pattern ''{1}''."/>
		</module>
		<module name="ClassTypeParameterName">
			<property name="format" value="(^[A-Z][0-9]?)$|([T][A-Z][a-zA-Z0-9]+$)"/>
			<message key="name.invalidPattern"
					 value="Class type name ''{0}'' must match pattern ''{1}''."/>
		</module>
		<module name="MethodTypeParameterName">
			<property name="format" value="(^[A-Z][0-9]?)$|([T][A-Z][a-zA-Z0-9]+$)"/>
			<message key="name.invalidPattern"
					 value="Method type name ''{0}'' must match pattern ''{1}''."/>
		</module>
		<module name="NoFinalizer"/>
		<module name="GenericWhitespace">
			<message key="ws.followed"
					 value="GenericWhitespace ''{0}'' is followed by whitespace."/>
			<message key="ws.preceded"
					 value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
			<message key="ws.illegalFollow"
					 value="GenericWhitespace ''{0}'' should followed by whitespace."/>
			<message key="ws.notPreceded"
					 value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
		</module>
		<module name="AbbreviationAsWordInName">
			<property name="allowedAbbreviationLength" value="7"/>
			<property name="tokens" value="VARIABLE_DEF,CLASS_DEF"/>
			<property name="allowedAbbreviations" value="HDFSIO,MSSQLDBIT,PLASMA"/>
		</module>
		<module name="EmptyStatement"/>
		<module name="EqualsAvoidNull"/>
		<module name="DefaultComesLast"/>
		<module name="PackageDeclaration"/>
		<!--<module name="ParameterAssignment"/>-->
		<module name="SimplifyBooleanExpression"/>
		<module name="SimplifyBooleanReturn"/>
		<module name="StringLiteralEquality"/>
		<module name="SuperClone"/>
		<module name="UnnecessaryParentheses"/>
		<module name="MethodParamPad">
			<property name="allowLineBreaks" value="true"/>
		</module>
		<module name="AnnotationLocation">
			<property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF"/>
		</module>
		<module name="AnnotationLocation">
			<property name="tokens" value="VARIABLE_DEF"/>
			<property name="allowSamelineMultipleAnnotations" value="true"/>
		</module>
		<module name="NonEmptyAtclauseDescription">
			<property name="severity" value="info"/>
		</module>
		<module name="SummaryJavadoc">
			<property name="forbiddenSummaryFragments"
					  value="^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )"/>
		</module>
		<module name="AtclauseOrder">
			<property name="tagOrder" value="@param, @return, @throws, @deprecated"/>
			<property name="target" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
		</module>
		<module name="JavadocMethod">
			<property name="severity" value="info"/>
			<property name="scope" value="public"/>
			<property name="allowMissingParamTags" value="true"/>
			<property name="allowMissingReturnTag" value="true"/>
			<property name="allowedAnnotations" value="Override, Test"/>
		</module>
		<module name="JavadocType">
			<property name="severity" value="info"/>
		</module>
		<module name="MethodName">
			<property name="format" value="^[a-z][a-zA-Z0-9_]*$"/>
			<message key="name.invalidPattern"
					 value="Method name ''{0}'' must match pattern ''{1}''."/>
		</module>
		<module name="SingleLineJavadoc">
			<property name="ignoreInlineTags" value="false"/>
		</module>
		<module name="CommentsIndentation"/>
		<module name="TodoComment">
			<property name="format" value="(FIXME)"/>
			<property name="severity" value="warning"/>
		</module>
		<module name="TodoComment">
			<property name="format" value="(TODO)"/>
			<property name="severity" value="warning"/>
		</module>
		<module name="TodoComment">
			<property name="format" value="(XXX)"/>
			<property name="severity" value="info"/>
		</module>
		<module name="HideUtilityClassConstructor"/>
		<module name="SuppressionXpathSingleFilter">
			<property name="checks" value="HideUtilityClassConstructor"/>
			<property name="query"
					  value="//CLASS_DEF[MODIFIERS/ANNOTATION[*[@text = 'SpringBootApplication']]]"/>
		</module>


		<module name="AvoidInlineConditionals">
			<property name="severity" value="ignore"/>
		</module>
		<module name="SuppressWarningsHolder"/>
	</module>
	<!-- Filter out Checkstyle warnings that have been suppressed with the @SuppressWarnings annotation -->
	<module name="SuppressWarningsFilter"/>
</module>